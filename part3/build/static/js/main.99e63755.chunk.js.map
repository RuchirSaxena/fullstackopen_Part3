{"version":3,"sources":["components/Phonebook.jsx","components/PhoneBookForm.jsx","components/Filter.jsx","services/phonebook.js","components/Notification.jsx","components/App.jsx","index.js"],"names":["Phonebook","id","name","phoneNumber","deletePhoneRecord","type","value","onClick","PhoneBookForm","nameChange","phoneChange","addPhoneRecord","onChange","Filter","handleSearch","baseUrl","Notification","message","color","errorNotifcation","backgroundColor","fontSize","padding","border","borderRadius","style","uuidV4","require","App","useState","phonebook","setPhonebookRecord","newName","setNewName","newPhoneNumber","setNewNumber","notificationMessage","setNotifiactionMessage","notificationType","setNotifiactionType","useEffect","getPersonsData","axios","get","then","response","data","catch","err","console","log","handleDeletePhonebookRecord","phonebookRecord","find","record","window","confirm","copy","filter","delete","remove","error","setNotifiactionInfo","updatePhoneBook","newPhoneRecord","put","update","updatedRecord","resetForm","event","searchCriteria","target","trim","searchResults","person","toLowerCase","includes","length","number","preventDefault","updatedPhoneRecord","newPerson","post","returnedRecord","concat","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99e63755.chunk.js","sourcesContent":["import React  from 'react';\n\nconst Phonebook = ({id, name, phoneNumber, deletePhoneRecord }) => {\n  return (\n    <div>\n      <span>{name}&nbsp;</span>\n      <span>{phoneNumber}</span>\n      <input type='button' value='delete' onClick={() => deletePhoneRecord(id)} />\n    </div>\n  )\n};\n\nexport default Phonebook;","import React from 'react';\n\nconst PhoneBookForm =({ \n   name,\n   phoneNumber,  \n   nameChange, \n   phoneChange,\n   addPhoneRecord }) => {\n    return (\n      <form>\n        <div>\n          name: <input value={name} onChange={nameChange} />\n        </div>\n        <div>number: <input value={phoneNumber} onChange={phoneChange} /></div>\n        <div>\n          <button type=\"submit\" onClick={addPhoneRecord}>add</button>\n        </div>\n      </form>\n    );\n}\n\nexport default PhoneBookForm;","import React from 'react';\n\nconst Filter = ({handleSearch}) => {\n    return (\n      <div>\n        filter shown with : <input onChange={handleSearch} />\n      </div>\n    );\n};\n\nexport default Filter;","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data)\n}\n\nconst create = (newPhoneRecord) => {\n    const request = axios.post(baseUrl, newPhoneRecord);\n    return request.then(response => response.data)\n}\n\nconst update = (id, newPhoneRecord) => {\n    const request = axios.put(`${baseUrl}/${id}`, newPhoneRecord);\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`);\n    return request.then(response => response.data)\n}\n\nexport {\n    getAll, create, update, remove\n};\n\n\n\n","import React from 'react'\r\n\r\nconst Notification = ({ message,type='success' }) => {\r\n    if (!message) {\r\n        return null;\r\n    }\r\n    const color = type === 'success' ? 'green' : 'red';\r\n    const errorNotifcation ={\r\n         backgroundColor: '#cbd5cb',\r\n         fontSize: 22,\r\n         padding: 5,\r\n         border: `4px ${color} solid`,\r\n         color: color,\r\n         borderRadius: 6,\r\n    };\r\n    return (\r\n        <div style={errorNotifcation}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react';\nimport Phonebook from './Phonebook';\nimport PhoneBookForm from './PhoneBookForm';\nimport Filter from './Filter';\nimport { getAll, create, update, remove } from '../services/phonebook';\nimport Notification from './Notification';\nconst uuidV4 = require('uuid.v4');\n\n\nconst App = () => {\n  const [phonebook, setPhonebookRecord] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhoneNumber, setNewNumber] = useState('');\n  const [notificationMessage, setNotifiactionMessage] = useState('');\n  const [notificationType, setNotifiactionType] = useState('');\n\n  useEffect(() => {\n    getPersonsData();\n  }, []);\n\n  const getPersonsData = () => {\n    getAll()\n      .then(response => {\n        setPhonebookRecord(response);\n      }).catch(err => console.log(err));\n  }\n\n  const handleNameChange = (event) => {\n    const name = event.target.value.trim();\n    setNewName(name);\n  };\n\n  const handlePhoneChange = (event) => {\n    const number = event.target.value.trim();\n    setNewNumber(number);\n  };\n\n\n  const handleDeletePhonebookRecord = (id) => {\n    const phonebookRecord = phonebook.find(record => record.id === id);\n    const isDelete = window.confirm(`Delete ${phonebookRecord.name} ?`);\n    if (isDelete) {\n      const copy = phonebook.filter(record => record.id !== id);\n      remove(phonebookRecord.id).then(response => {\n        console.log(response);\n        if(response.error){\n          throw 'error!';\n        }\n        setPhonebookRecord(copy)\n      })\n        .catch(err => setNotifiactionInfo((`Information of ${phonebookRecord.name} has already been removed from server`), 'failure'))\n    }\n  };\n\n  const showPhonebook = () => {\n    return phonebook.map(record => {\n      return (<Phonebook key={record.id} id={record.id} name={record.name} phoneNumber={record.number} deletePhoneRecord={handleDeletePhonebookRecord} />);\n    });\n  }\n\n  const handleAddPhoneRecord = (event) => {\n    event.preventDefault();\n    const phonebookRecord = phonebook.filter(record => record.name === newName);\n    if (phonebookRecord.length) {\n      //alert(`${newName} is already added to phonebook`);\n      const response = window.confirm(`${newName} has already been added to the phonebook, replace the old number with new number?`)\n      if (response) {\n        const updatedPhoneRecord = {\n          name: newName,\n          number: newPhoneNumber,\n          id: phonebookRecord[0].id\n        };\n        updatePhoneBook(phonebookRecord[0].id, updatedPhoneRecord);\n\n      }\n      resetForm();\n      return;\n    }\n\n    const newPerson = {\n      name: newName,\n      number: newPhoneNumber,\n      id: uuidV4(),\n    };\n    resetForm();\n    create(newPerson).then(returnedRecord => {\n      setPhonebookRecord(phonebook.concat(returnedRecord))\n      setNotifiactionInfo((newName + \" added\"), 'success')\n    })\n      .catch(err => console.log(err));\n  }\n\n\n  const updatePhoneBook = (id, record) => {\n    update(id, record).then(updatedRecord => {\n      console.log(updatedRecord);\n      // setPhonebookRecord(phonebook.map(record => record.id !== id ? record : updatedRecord));\n      setPhonebookRecord(updatedRecord);\n    }).catch(err => console.log(err));\n\n  }\n\n  const handleSearch = (event) => {\n    const searchCriteria = event.target.value.trim();\n    const searchResults = phonebook.filter(person => person.name.trim().toLowerCase().includes(searchCriteria.toLowerCase()));\n    if (searchResults.length && searchCriteria) {\n      setPhonebookRecord(searchResults);\n    } else {\n      getPersonsData();\n    }\n\n  }\n\n  const resetForm = () => {\n    setNewName('');\n    setNewNumber('');\n  }\n\n  const setNotifiactionInfo = (notificationMessage, notificationType) => {\n    setNotifiactionMessage(notificationMessage);\n    setNotifiactionType(notificationType);\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <h2> <Notification message={notificationMessage} type={notificationType} /> </h2>\n\n      <Filter handleSearch={handleSearch} />\n\n      <h2>add a new</h2>\n\n      <PhoneBookForm\n        name={newName}\n        phoneNumber={newPhoneNumber}\n        nameChange={handleNameChange}\n        phoneChange={handlePhoneChange}\n        addPhoneRecord={handleAddPhoneRecord}\n      />\n\n      <h3>Numbers</h3>\n\n      {showPhonebook()}\n\n    </div>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}